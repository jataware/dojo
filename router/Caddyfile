(common) {
  log {
    output stdout
    level DEBUG
  }
  header -Server
}

(errors-common) {
  header -Server
}

:80 {
    import common

    redir /api/terminal /api/terminal/
    handle_path /api/terminal/* {
        reverse_proxy terminal.dojo-stack:3000
    }

    @websocket {
        header Connection *Upgrade*
        header Upgrade    websocket
        path /api/ws
    }

    handle @websocket {
        reverse_proxy terminal.dojo-stack:3000/ws {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    redir /api/dojo /api/dojo/
    redir /openapi.json /api/dojo/openapi.json
    handle_path /api/dojo/* {
        reverse_proxy {$DOJO_HOST}:80
    }

    redir /api/ai-docs /api/ai-docs/
    handle_path /api/ai-docs/* {
        reverse_proxy host.docker.internal:8001
    }

    handle_path /* {
        root * /usr/share/caddy
        encode gzip
        try_files {path} /index.html
        file_server
    }

    # Could also serve satic files elsewhere and then reverse-proxy:
    # handle_path /* {
    #     reverse_proxy ui.dojo-stack:8080
    # }

    handle_errors {
        import errors-common
    }
}
