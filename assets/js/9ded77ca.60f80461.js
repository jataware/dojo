"use strict";(self.webpackChunkdojo_docs_v_2=self.webpackChunkdojo_docs_v_2||[]).push([[482],{9062:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>h});var i=t(5893),o=t(1151);const a={},s="Whitelabeling",r={id:"dev-docs/whitelabeling",title:"Whitelabeling",description:"The Dojo app can be whitelabeled (rebranded) with custom text, styles, and components through a set of utility tools in the ui React app. This process currently involves light front end coding, though once it is configured for a specific organization, making changes to the copy or styles is easy and fast.",source:"@site/docs/dev-docs/whitelabeling.mdx",sourceDirName:"dev-docs",slug:"/dev-docs/whitelabeling",permalink:"/dev-docs/whitelabeling",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"dojoSidebar",previous:{title:"Common Problems",permalink:"/dev-docs/common-problems"}},d={},h=[{value:"The COMPANY_BRANDING Env Variable",id:"the-company_branding-env-variable",level:2},{value:"In the envfile",id:"in-the-envfile",level:3},{value:"In the React App",id:"in-the-react-app",level:3},{value:"Updating the React App",id:"updating-the-react-app",level:2},{value:"Swapping Out Content",id:"swapping-out-content",level:3},{value:"Adding a Custom Theme",id:"adding-a-custom-theme",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"whitelabeling",children:"Whitelabeling"}),"\n",(0,i.jsxs)(n.p,{children:["The Dojo app can be whitelabeled (rebranded) with custom text, styles, and components through a set of utility tools in the ",(0,i.jsx)(n.code,{children:"ui"})," React app. This process currently involves light front end coding, though once it is configured for a specific organization, making changes to the copy or styles is easy and fast."]}),"\n",(0,i.jsx)(n.h2,{id:"the-company_branding-env-variable",children:"The COMPANY_BRANDING Env Variable"}),"\n",(0,i.jsx)(n.h3,{id:"in-the-envfile",children:"In the envfile"}),"\n",(0,i.jsxs)(n.p,{children:["The specific whitelabel organization we want to switch to is represented by the ",(0,i.jsx)(n.code,{children:"COMPANY_BRANDING"})," environment variable in the Dojo ",(0,i.jsx)(n.code,{children:"envfile"}),". If this env variable is not present in your envfile, the React app will default to the Jataware Dojo branding (as if ",(0,i.jsx)(n.code,{children:"COMPANY_BRANDING=dojo"}),"). If you want to add a new whitelabel variant, you need to start by giving this a new value, for example: ",(0,i.jsx)(n.code,{children:"COMPANY_BRANDING=acme"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"in-the-react-app",children:"In the React App"}),"\n",(0,i.jsxs)(n.p,{children:["The React app interacts with the ",(0,i.jsx)(n.code,{children:"COMPANY_BRANDING"})," env variable in two primary places:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["In the ",(0,i.jsx)(n.code,{children:"/components/uiComponents/Branding.js"})," file, where several small utility functions are defined. We use these to help switch out the whitelabeled content throughout the app. All the other interactions with the branding, including the global theme, are based on these functions."]}),"\n",(0,i.jsxs)(n.li,{children:["In the root ",(0,i.jsx)(n.code,{children:"index.js"})," file, where we switch out the favicons. This is a one-off just used in this one file."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you add a new ",(0,i.jsx)(n.code,{children:"COMPANY_BRANDING"})," value, you must update the references in these two files to include your new value. If you don't, you'll fallback to Dojo branding instead of getting your new ",(0,i.jsx)(n.code,{children:"acme"})," branding."]})}),"\n",(0,i.jsx)(n.h2,{id:"updating-the-react-app",children:"Updating the React App"}),"\n",(0,i.jsx)(n.h3,{id:"swapping-out-content",children:"Swapping Out Content"}),"\n",(0,i.jsxs)(n.p,{children:["Swapping out content, whether it's text, images, or entire React components, can be achieved with the ",(0,i.jsx)(n.code,{children:"BrandSwap"})," utility from the ",(0,i.jsx)(n.code,{children:"Branding.js"})," file mentioned above. This is simply a wrapper around a Javascript ",(0,i.jsx)(n.code,{children:"switch"})," statement, and as such it can be used inline within JSX or as a non-JSX function, as discussed in the Custom Theme section below. The ",(0,i.jsx)(n.code,{children:"landingpage.js"})," file has extensive examples of the ",(0,i.jsx)(n.code,{children:"BrandSwap"})," component being used."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<BrandSwap \n  dojo={<div>The Dojo Version</div>} \n  acme={<div><h1>Acme</h1><br /><span>a subtitle</span></div>} \n/>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Changing something that is already wrapped in a whitelabel helper component is quite easy, as it just involves adding another prop with your content to the ",(0,i.jsx)(n.code,{children:"BrandSwap"})," component (eg ",(0,i.jsx)(n.code,{children:"<BrandSwap dojo={...} acme={...} jataware={...} />"}),"). It's slightly more involved to whitelabel something that isn't currently set up to change with the changing environment variable, as you need pass the existing content as a prop to ",(0,i.jsx)(n.code,{children:"BrandSwap"}),", ensure nothing has been broken by doing so, and add your content as another prop."]}),"\n",(0,i.jsxs)(n.p,{children:["There are another two very small utility functions in this file that make it easy to swap the organization name: ",(0,i.jsx)(n.code,{children:"BrandName"})," and ",(0,i.jsx)(n.code,{children:"getBrandName"}),". ",(0,i.jsx)(n.code,{children:"BrandName"})," is intended to be used inline in JSX, and ",(0,i.jsx)(n.code,{children:"getBrandName"})," is meant to be used anywhere outside of JSX. Both of these simply return the organization name, properly formatted for display. Set this up when you configure ",(0,i.jsx)(n.code,{children:"BrandSwap"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"adding-a-custom-theme",children:"Adding a Custom Theme"}),"\n",(0,i.jsxs)(n.p,{children:["Custom themes are set up in the root ",(0,i.jsx)(n.code,{children:"theme.js"})," file. We create a default custom theme that exists for all variants of the app, and then each whitelabeled variant has its own named theme. The current variant is selected (using ",(0,i.jsx)(n.code,{children:"BrandSwap"}),") and merged with the default custom theme, which is then applied to the app in ",(0,i.jsx)(n.code,{children:"index.js"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["You can create custom theme properties that you can then access anywhere under ",(0,i.jsx)(n.code,{children:"theme.yourCustomTheme.etc"}),". We have namespaced all of our custom theme properties under ",(0,i.jsx)(n.code,{children:"custom"})," to not mix them with the MUI theme and keep it clear. Feel free to use this ",(0,i.jsx)(n.code,{children:"custom"})," namespace or create your own. Note that some of the current styling on the landing page is configured to work with this ",(0,i.jsx)(n.code,{children:"custom"})," namespace."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you want to override any of our global custom themes or any of the MUI themes, you can use the same key name as an existing one to overwrite it.\nThe example below overwrites MUI's ",(0,i.jsx)(n.code,{children:"theme.palette.secondary"})," object."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"const dojoTheme = {\n  custom: {\n    nav: {\n      backgroundColor: '#06B8EF',\n      image: 'linear-gradient(to right, #06B8EF, #A11BDA)',\n    },\n    landing: {\n      backgroundColor: '#06B8EF',\n      color: 'white',\n    },\n    button: {\n      color: 'white',\n      backgroundColor: 'black',\n    },\n  },\n  palette: {\n    secondary: {\n      main: '#9166E3',\n      light: '#af90eb',\n      dark: '#733cdb',\n      constrastText: '#fff',\n    }\n  }\n};\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var i=t(7294);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);