"use strict";(self.webpackChunkdojo_docs_v_2=self.webpackChunkdojo_docs_v_2||[]).push([[219],{8881:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>t,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>a});var r=n(5893),i=n(1151);const c={},t="Make and Docker Integration",d={id:"dev-docs/make-and-docker-integration",title:"Make and Docker Integration",description:"Developers familiar with Docker and docker-compose might be surprised to find that the docker-compose.yaml file at the root of the repo is programmatically generated and updated",source:"@site/docs/dev-docs/make-and-docker-integration.mdx",sourceDirName:"dev-docs",slug:"/dev-docs/make-and-docker-integration",permalink:"/dev-docs/make-and-docker-integration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"dojoSidebar",previous:{title:"Developer Workflow",permalink:"/dev-docs/developer-workflow"},next:{title:"Document Upload Architecture",permalink:"/dev-docs/document-upload-architecture"}},s={},a=[];function l(e){const o={code:"code",em:"em",h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h1,{id:"make-and-docker-integration",children:"Make and Docker Integration"}),"\n",(0,r.jsxs)(o.p,{children:["Developers familiar with Docker and docker-compose might be surprised to find that the ",(0,r.jsx)(o.code,{children:"docker-compose.yaml"})," file at the root of the repo is programmatically generated and updated\nby the ",(0,r.jsx)(o.code,{children:"make"})," build tasks."]}),"\n",(0,r.jsx)(o.p,{children:"Each service contains its own docker-compose.yaml details:"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:"ui/docker-compose.yaml"}),"\n",(0,r.jsx)(o.li,{children:"api/docker-compose.yaml"}),"\n",(0,r.jsx)(o.li,{children:"dmc/docker-compose.yaml"}),"\n",(0,r.jsx)(o.li,{children:"tasks/docker-compose.yaml"}),"\n",(0,r.jsx)(o.li,{children:"workers/docker-compose.yaml"}),"\n",(0,r.jsx)(o.li,{children:"testmos/docker-compose.yaml"}),"\n",(0,r.jsx)(o.li,{children:"terminal/docker-compose.yaml"}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Additionally, an overrides file contains any changes modified for local development or production:\n",(0,r.jsx)(o.code,{children:"docker-compose.build-override.yaml"})]}),"\n",(0,r.jsxs)(o.p,{children:["The ",(0,r.jsx)(o.code,{children:"make"})," task ",(0,r.jsx)(o.code,{children:"docker-compose.yaml"})," stitches together the ",(0,r.jsx)(o.code,{children:"envfile"})," and the above ",(0,r.jsx)(o.code,{children:"*/docker-compose*"})," files into the final docker-compose.yaml file."]}),"\n",(0,r.jsxs)(o.p,{children:["The docker-compose file is regenerated under certain conditions, which can be understood by examining the ",(0,r.jsx)(o.code,{children:"Makefile"}),". Alternatively, you can manually run ",(0,r.jsx)(o.code,{children:"make docker-compose.yaml"})," to regenerate it by hand. Docker-compose regeneration is usually only relevant in specific situations, such as when:"]}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:"Modifying the envfile values"}),"\n",(0,r.jsxs)(o.li,{children:["Modifying ",(0,r.jsx)(o.em,{children:"/docker-compose"})," files as part of a service while developing a new feature"]}),"\n",(0,r.jsx)(o.li,{children:"Customizing environment values for production deployment, or in other specific scenarios"}),"\n"]})]})}function m(e={}){const{wrapper:o}={...(0,i.a)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,o,n)=>{n.d(o,{Z:()=>d,a:()=>t});var r=n(7294);const i={},c=r.createContext(i);function t(e){const o=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(c.Provider,{value:o},e.children)}}}]);